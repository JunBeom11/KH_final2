CREATE TABLE MEMBER (
    	U_NO   	NUMBER    	PRIMARY KEY,
	U_ID	VARCHAR2(30)	UNIQUE	NOT NULL,
    	U_PWD	varchar2(100)		NOT NULL,
	NICKNAME	varchar2(30)	UNIQUE	NOT NULL,
	EMAIL	varchar2(345)		NOT NULL,
   	BIRTH 	DATE,
	ACCOUNT_LOCKED	DATE,
	U_VALIDATE	number(1)	DEFAULT 0	NOT NULL,
	U_ROLE	number(1)	DEFAULT 0	NOT NULL,
	SIGNUP_TYPE	number(1)	DEFAULT 0	NOT NULL
);

ALTER TABLE MEMBER ADD (ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL);



CREATE TABLE MOVIE (
	MOVIE_ID	int		NOT NULL,
	LAST_UPDATE	date	DEFAULT sysdate	NOT NULL,
	TITLE	    varchar2(255)		NOT NULL,
	TITLE_KOR	varchar2(512)		NULL,
	PRODUCT_YEAR	number(12)		NULL,
	OPEN_DATE	date		NULL,
	COUNTRY	varchar2(64)		NULL,
	GENRE	varchar2(512)		NULL,
	DIRECTOR	varchar2(128)		NULL,
	VOTE	number(4)		NULL,
	ADULT 	number(1)	DEFAULT 0	NOT NULL,
	RUN_TIME	number(6)		NOT NULL,
	M_POSTER	varchar2(512)		NULL
);

ALTER TABLE MOVIE ADD NETFLIX VARCHAR2(255) DEFAULT NULL;
ALTER TABLE MOVIE ADD WATCHA VARCHAR2(255) DEFAULT NULL;
ALTER TABLE MOVIE ADD TVING VARCHAR2(255) DEFAULT NULL;
ALTER TABLE MOVIE ADD WAVVE VARCHAR2(255) DEFAULT NULL;
ALTER TABLE MOVIE ADD VIEWING_AGE VARCHAR2(20) DEFAULT '전체이용가';
ALTER TABLE MOVIE ADD STORY VARCHAR(500) DEFAULT NULL;
ALTER TABLE MOVIE ADD ACTOR VARCHAR(100) DEFAULT NULL;
ALTER TABLE MOVIE ADD TRAILER VARCHAR2(100) DEFAULT NULL;

COMMENT ON COLUMN MOVIE.TRAILER IS '트레일러';
COMMENT ON COLUMN MOVIE.STORY is '영화줄거리';
COMMENT ON COLUMN MOVIE.ACTOR is '출연진';
COMMENT ON COLUMN MOVIE.VIEWING_AGE IS '시청연령';

ALTER TABLE MOVIE MODIFY(NETFLIX VARCHAR2(100));
ALTER TABLE MOVIE MODIFY(WATCHA VARCHAR2(100));
ALTER TABLE MOVIE MODIFY(TVING VARCHAR2(100));
ALTER TABLE MOVIE MODIFY(WAVVE VARCHAR2(100));
ALTER TABLE MOVIE MODIFY(STORY  VARCHAR2(3000));
ALTER TABLE MOVIE MODIFY(actor  VARCHAR2(150));




CREATE TABLE MOVIE_REVIEW (
    REVIEW_ID        int        NOT NULL,
    MOVIE_ID    int        NOT NULL,
    RATE    number(4)    DEFAULT 0    NOT NULL,
    SPOILER    number(1)    DEFAULT 0    NOT NULL,
    CONTENT    varchar2(1024)        NOT NULL,
    writeDate date default sysdate not null,
    likecount int default 0,
    u_no number 
);




CREATE TABLE PARTY_LIST (
    U_ID    VARCHAR2(30) NOT NULL,
	PARTY_NO	int 	NOT NULL,
	CREATE_DATE	date	DEFAULT SYSDATE NOT NULL,
	CONTENT	varchar2(1024) NOT NULL,
	LINK	varchar2(255)	NOT NULL,
	OTT_TYPE varchar2(100) NOT NULL,
	NAME	varchar2(100)	NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    FOREIGN KEY(U_ID) REFERENCES MEMBER(U_ID)
);





CREATE TABLE NOTICE (
NO	NUMBER(10)		NOT NULL,
WRITER_NO	NUMBER(10)		NOT NULL,
TITLE	VARCHAR2(100)	NOT NULL,
CONTENT	varchar2(2000)		NOT NULL,
CREATE_DATE	DATE DEFAULT SYSDATE,
    STATUS VARCHAR2(2) DEFAULT 'Y'
);





CREATE TABLE MOVIE_USER_LIKE (
   LIKE_ID   int   NOT NULL,
   MOVIE_ID       int   NOT NULL,
   U_ID   int   NOT NULL,
   ADD_DATE   date   DEFAULT sysdate   NOT NULL
);

ALTER TABLE MOVIE_USER_LIKE RENAME COLUMN U_ID TO U_NO;






COMMENT ON COLUMN MEMBER.U_NO IS '유저번호';

COMMENT ON COLUMN MEMBER.U_ID IS '유저 아이디';

COMMENT ON COLUMN MEMBER.NICKNAME IS '닉네임';

COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.ACCOUNT_LOCKED IS '계정 LOCK 종료 날짜';

COMMENT ON COLUMN MEMBER.U_VALIDATE IS '본인인증여부(0:인증안됨 1:인증됨)';

COMMENT ON COLUMN MEMBER.U_PWD IS '비밀번호';

COMMENT ON COLUMN MEMBER.U_ROLE IS '유저유형 (0: 일반회원, 1: 관리자, 2: 탈퇴회원, 3: 정지회원)';

COMMENT ON COLUMN MEMBER.SIGNUP_TYPE IS '가입유형 (0: 일반, 1: 네이버, 2:,,,)';

COMMENT ON COLUMN MEMBER.BIRTH IS '생일';

COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '가입날짜';


COMMENT ON COLUMN MOVIE.MOVIE_ID IS '영화 고유 아이디';

COMMENT ON COLUMN MOVIE.LAST_UPDATE IS '테이블 마지막 업데이트일';

COMMENT ON COLUMN MOVIE.TITLE IS '원문 제목';

COMMENT ON COLUMN MOVIE.TITLE_KOR IS '국문 제목';

COMMENT ON COLUMN MOVIE.PRODUCT_YEAR IS '제작 년도';

COMMENT ON COLUMN MOVIE.OPEN_DATE IS '개봉일';

COMMENT ON COLUMN MOVIE.COUNTRY IS '국가';

COMMENT ON COLUMN MOVIE.GENRE IS '장르';

COMMENT ON COLUMN MOVIE.DIRECTOR IS '감독';

COMMENT ON COLUMN MOVIE.VOTE IS '평점';

COMMENT ON COLUMN MOVIE.ADULT IS '성인 여부';

COMMENT ON COLUMN MOVIE.RUN_TIME IS '상영 시간';

COMMENT ON COLUMN MOVIE.M_POSTER IS '포스터';

COMMENT ON COLUMN MOVIE.NETFLIX is '넷플릭스주소';

COMMENT ON COLUMN MOVIE.WATCHA is '왓챠주소';

COMMENT ON COLUMN MOVIE.TVING is '티빙주소';

COMMENT ON COLUMN MOVIE.WAVVE is '웨이브주소';


COMMENT ON COLUMN PARTY_LIST.U_ID IS '작성자 아이디';

COMMENT ON COLUMN PARTY_LIST.PARTY_NO IS '파티식별자';

COMMENT ON COLUMN PARTY_LIST.CREATE_DATE IS '등록일자';

COMMENT ON COLUMN PARTY_LIST.CONTENT IS '내용(조건)';

COMMENT ON COLUMN PARTY_LIST.LINK IS '링크';

COMMENT ON COLUMN PARTY_LIST.OTT_TYPE IS 'ott 식별자';

COMMENT ON COLUMN PARTY_LIST.NAME IS '파티명';

COMMENT ON COLUMN MOVIE_REVIEW.REVIEW_ID IS '고유 번호';

COMMENT ON COLUMN MOVIE_REVIEW.MOVIE_ID IS '영화 고유 아이디';

COMMENT ON COLUMN MOVIE_REVIEW.RATE IS '평점';

COMMENT ON COLUMN MOVIE_REVIEW.SPOILER IS '스포일러포함여부(0: 미포함, 1: 포함)';

COMMENT ON COLUMN MOVIE_REVIEW.CONTENT IS '리뷰 내용';

COMMENT ON COLUMN MOVIE_REVIEW.writedate is '리뷰 작성일';

COMMENT ON COLUMN MOVIE_REVIEW.likecount is '리뷰 좋아요';

COMMENT ON COLUMN MOVIE_REVIEW.u_no is '리뷰 유저 번호';

COMMENT ON COLUMN MOVIE_USER_LIKE.LIKE_ID IS '고유번호';

COMMENT ON COLUMN MOVIE_USER_LIKE.MOVIE_ID IS '영화 고유 아이디';

COMMENT ON COLUMN MOVIE_USER_LIKE.U_ID IS '유저 고유 번호';

COMMENT ON COLUMN MOVIE_USER_LIKE.ADD_DATE IS '추가 날짜';

COMMENT ON COLUMN TAG_LIST.TAG_NO IS '태그식별자';

COMMENT ON COLUMN TAG_LIST.TAG_NAME IS '태그';

COMMENT ON COLUMN NOTICE_CATEGORY.CATEGORY IS '공지 분류 식별자(0: FAQ, 1: 공지사항 ...))';

COMMENT ON COLUMN NOTICE_CATEGORY.CATEGORY_NAME IS '공지 분류 이름';

COMMENT ON COLUMN REPORT.REPORT_NO IS '신고 식별자';

COMMENT ON COLUMN REPORT.U_ID IS '유저 고유 번호';

COMMENT ON COLUMN REPORT.REPORT_CONTENT IS '신고내용';

COMMENT ON COLUMN REPORT.REPORT_DATE IS '신고일';

COMMENT ON COLUMN REPORT.REPORT_STATUS IS '신고상태 (0: 처리중, 1: 처리 완료)';

COMMENT ON COLUMN notice.NO IS '글번호';

COMMENT ON COLUMN notice.WRITER_NO IS '작성자번호';

COMMENT ON COLUMN notice.TITLE IS '글제목';

COMMENT ON COLUMN notice.CONTENT IS '내용';

COMMENT ON COLUMN notice.CREATE_DATE IS '작성일';

COMMENT ON COLUMN notice.status IS '상태';

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	U_NO
);

ALTER TABLE MOVIE ADD CONSTRAINT PK_MOVIE PRIMARY KEY (
	MOVIE_ID
);

ALTER TABLE PARTY_JOIN ADD CONSTRAINT PK_PARTY_JOIN PRIMARY KEY (
	PARTY_NO,
	U_ID
);

ALTER TABLE MOVIE_REVIEW ADD CONSTRAINT PK_MOVIE_REVIEW PRIMARY KEY (
	REVIEW_ID
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	NOTICE_ID
);

ALTER TABLE NOTIFICATION ADD CONSTRAINT PK_NOTIFICATION PRIMARY KEY (
	NOTIFICATION_ID
);


ALTER TABLE MOVIE_USER_LIKE ADD CONSTRAINT PK_MOVIE_USER_LIKE PRIMARY KEY (
	LIKE_ID
);

CREATE SEQUENCE SEQ_MNO;
CREATE SEQUENCE SEQ_MOVIE_ID;
CREATE SEQUENCE SEQ_REVIEW_ID;
CREATE SEQUENCE SEQ_NOTICE_ID;
CREATE SEQUENCE SEQ_MOVIE_WATCH_ID;
CREATE SEQUENCE SEQ_TAG_NO;
CREATE SEQUENCE SEQ_CATEGORY;
CREATE SEQUENCE SEQ_NOTICE_NO;
CREATE SEQUENCE SEQ_MOVIE_LIKE_ID;
CREATE SEQUENCE PARTY_NO_SEQ
START WITH 1
INCREMENT BY 1;

COMMIT;



